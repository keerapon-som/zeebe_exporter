# While the Docker images themselves are supported for production usage,
# this docker-compose.yaml is designed to be used by developers to run
# an environment locally. It is not designed to be used in production.
# We recommend to use Kubernetes in production with our Helm Charts:
# https://docs.camunda.io/docs/self-managed/platform-deployment/kubernetes-helm/
# For local development, we recommend using KIND instead of `docker-compose`:
# https://docs.camunda.io/docs/self-managed/platform-deployment/helm-kubernetes/guides/local-kubernetes-cluster/

# This is a full configuration with Zeebe, Operate, Tasklist, Optimize, Identity, Keycloak, and Elasticsearch
# See docker-compose-core.yml for a lightweight configuration that does not include Optimize, Identity, and Keycloak.

services:
  postgresql:
    image: postgres:latest
    restart: always
    container_name: postgres_container
    environment:
      POSTGRES_DB: exporterTest
      POSTGRES_USER: exporterTest_user
      POSTGRES_PASSWORD: exporterTest_password
    ports:
      - "5432:5432"
    volumes:
      - D:/Programer_eieiza/GemProject/CAMUNDA_CLONE_PROJECT/ZEEBE-EXPORTER/volumnData/postgresData:/var/lib/postgresql/data

  zeebe: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#zeebe
    image: camunda/zeebe:${CAMUNDA_PLATFORM_VERSION:-8.4.0}
    container_name: zeebe
    ports:
      - "26500:26500"
      - "9600:9600"
    environment: # https://docs.camunda.io/docs/self-managed/zeebe-deployment/configuration/environment-variables/
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      # allow running with low disk space
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
      - ZEEBE_LOG_LEVEL=debug
      - ROLE_SESSION_NAME=DigitalsolutionDevopsTeam
      - RECORD_POSITION_KEY_NAME=gem_key_test
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_PASSWORD=exampleRedisPassword
      - STREAM_NAME=streamExporter
      - PERIOD_EXPORT_POSITION=2
      - JOB=true
      - DEPLOYMENT=false
      - PROCESS_INSTANCE=false
      - INCIDENT=true
      - MESSAGE=false
      - MESSAGE_SUBSCRIPTION=false
      - PROCESS_MESSAGE_SUBSCRIPTION=false
      - JOB_BATCH=false
      - TIMER=false
      - MESSAGE_START_EVENT_SUBSCRIPTION=false
      - VARIABLE=true
      - VARIABLE_DOCUMENT=false
      - PROCESS_INSTANCE_CREATION=false
      - ERROR=false
      - PROCESS_INSTANCE_RESULT=false
      - PROCESS=false
      - DEPLOYMENT_DISTRIBUTION=false
      - PROCESS_EVENT=false
      - DECISION=false
      - DECISION_REQUIREMENTS=false
      - DECISION_EVALUATION=false
      - PROCESS_INSTANCE_MODIFICATION=false
      - ESCALATION=false
      - SIGNAL_SUBSCRIPTION=false
      - SIGNAL=false
      - RESOURCE_DELETION=false
      - COMMAND_DISTRIBUTION=false
      - PROCESS_INSTANCE_BATCH=false
      - MESSAGE_BATCH=false
      - FORM=false
      - USER_TASK=false
      - PROCESS_INSTANCE_MIGRATION=false
      - COMPENSATION_SUBSCRIPTION=false
    # restart: always
    volumes:
      # - zeebe:/usr/local/zeebe/data
      - D:/Programer_eieiza/GemProject/CAMUNDA_CLONE_PROJECT/ZEEBE-EXPORTER/volumnData/zeebeData:/usr/local/zeebe/data
      - ../exporter/target/jib/zeebe-redis-exporter-jar-with-dependencies.jar:/usr/local/zeebe/exporters/zeebe-redis-exporter-jar-with-dependencies.jar
      - ./application.yaml:/usr/local/zeebe/config/application.yaml
    networks:
      - camunda-platform
    depends_on:
      - elasticsearch
  
  redis:
    image: redis:latest
    command: redis-server --requirepass exampleRedisPassword
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=exampleRedisPassword
    networks:
      - camunda-platform
    volumes:
      - D:/Programer_eieiza/GemProject/CAMUNDA_CLONE_PROJECT/ZEEBE-EXPORTER/volumnData/redisData:/data

  operate: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#operate
    image: camunda/operate:${CAMUNDA_PLATFORM_VERSION:-8.4.0}
    container_name: operate
    ports:
      - "8081:8080"
    environment: # https://docs.camunda.io/docs/self-managed/operate-deployment/configuration/
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - camunda-platform
    depends_on:
      - zeebe
      - elasticsearch

  tasklist: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#tasklist
    image: camunda/tasklist:${CAMUNDA_PLATFORM_VERSION:-8.4.0}
    container_name: tasklist
    ports:
      - "8082:8080"
    environment: # https://docs.camunda.io/docs/self-managed/tasklist-deployment/configuration/
      - CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS=zeebe:26500
      - CAMUNDA_TASKLIST_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - camunda-platform
    depends_on:
      - zeebe
      - elasticsearch
    
  optimize:
    container_name: optimize
    image: camunda/optimize:${CAMUNDA_PLATFORM_VERSION:-8.4.0}
    ports:
        - 8090:8090
    environment:
        - SPRING_PROFILES_ACTIVE=ccsm
        - CAMUNDA_OPTIMIZE_IAM_ISSUER_URL=http://localhost:9090
        - CAMUNDA_OPTIMIZE_IAM_CLIENTID=optimize
        - CAMUNDA_OPTIMIZE_IAM_CLIENTSECRET=secret
        - OPTIMIZE_ELASTICSEARCH_HOST=localhost
        - OPTIMIZE_ELASTICSEARCH_HTTP_PORT=9200
        - CAMUNDA_OPTIMIZE_SECURITY_AUTH_COOKIE_SAME_SITE_ENABLED=false
        - CAMUNDA_OPTIMIZE_ENTERPRISE=false
        - CAMUNDA_OPTIMIZE_ZEEBE_ENABLED=false
        - CAMUNDA_OPTIMIZE_ZEEBE_NAME=zeebe-record
        - CAMUNDA_OPTIMIZE_ZEEBE_PARTITION_COUNT=1
        - CAMUNDA_OPTIMIZE_SHARING_ENABLED=false
        - CAMUNDA_OPTIMIZE_UI_LOGOUT_HIDDEN=false

  elasticsearch: # https://hub.docker.com/_/elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.13.0}
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      # allow running with low disk space
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      # - elastic:/usr/share/elasticsearch/data
      - D:/Programer_eieiza/GemProject/CAMUNDA_CLONE_PROJECT/ZEEBE-EXPORTER/volumnData/ELKData:/usr/share/elasticsearch/data
    networks:
      - camunda-platform

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-8.13.0}
    container_name: kibana
    environment:
      - elasticsearch.hosts=http://localhost:9200
    ports:
      - 5601:5601
    networks:
      - camunda-platform
    depends_on:
      - elasticsearch

volumes:
  zeebe:
  elastic:
  kibana:

# networks:
#   # Note there are two bridge networks: One for Camunda Platform and one for Identity.
#   # Operate, Tasklist, and Optimize use both
#   camunda-platform:

networks:
  camunda-platform:
    driver: bridge
